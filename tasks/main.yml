- become: yes
  block:

  - name: Set default value iptables_persistent_package_version if not specified
    set_fact:
      nat_gateway:
        iptables_persistent_package_version: "{{ nat_gateway.iptables_persistent_package_version_os_defaults[ansible_distribution + ansible_distribution_version] }}"
    when: nat_gateway.iptables_persistent_package_version == None

  - name: Apt update
    apt:
      update_cache: yes
      cache_valid_time: 36000
    register: r
    until: "('stderr' not in r) or (ansible_controller.apt_retry_on_stderr_containing not in r.stderr)"
    retries: "{{ ansible_controller.apt_retries | int }}"
    delay: "{{ ansible_controller.apt_retry_delay | int }}"  

  - name: Install iptables-persistent
    apt:
      name: iptables-persistent={{ nat_gateway.iptables_persistent_package_version }}
      state: present
    register: r
    until: "('stderr' not in r) or (ansible_controller.apt_retry_on_stderr_containing not in r.stderr)"
    retries: "{{ ansible_controller.apt_retries | int }}"
    delay: "{{ ansible_controller.apt_retry_delay | int }}"  
    
  - name: Enable net.ipv4.ip_forward
    ansible.posix.sysctl:
      name: net.ipv4.ip_forward
      value: '1'
      sysctl_set: yes
      state: present
      reload: yes

  - name: Clean nat POSTROUTING table 
    ansible.builtin.iptables:
      table: nat
      chain: POSTROUTING
      flush: true
    changed_when: false
    when: nat_gateway.clean_postrouting

  - name: Enable MASQUERADE
    ansible.builtin.iptables:
      table: nat
      source: "{{ item }}"
      out_interface: "{{ ansible_default_ipv4.interface }}"
      jump: MASQUERADE
      chain: POSTROUTING
    changed_when: false
    loop: "{{ nat_gateway.source_cidrs }}"

  - name: Check if docker socket file exists
    stat:
      path: /var/run/docker.sock
    register: docker_socket

  - name: Enable MASQUERADE for docker
    ansible.builtin.iptables:
      table: nat
      source: "{{ nat_gateway.docker_net }}"
      jump: MASQUERADE
      chain: POSTROUTING
      out_interface: "! docker0"
    when: docker_socket.stat.exists and nat_gateway.docker_masquerade

  - name: Save iptables
    shell: iptables-save > /etc/iptables/rules.v4
    changed_when: false
